%%%%% Define the square and grid parameters %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
clear all;
clc;
L=1;  %square is 2L x 2L 
N=100; %# of intervals in x and y directions
n=N+1; %# of gridpoints in x,y directions including boundaries
h=2*L/N;  %grid size in x,y directions
x=-L + (0:N)*h; %x values on the grid
y=-L + (0:N)*h; %y values on the grid
[X,Y]=meshgrid(x,y);
%%%%% Define the indices associated with the boundaries %%%%%%%%%%%%%%%%%%%
% boundary_index = [bottom, left, top, right]
boundary_index=[          1:n,       1:n:1+(n-1)*n, ...
                1+(n-1)*n:n*n,   n:n:n*n           ]; 
%%%%% Diffusion constant and time-step parameters
D=1;
dt=h^2/(2*D); %borderline stability of FTCS scheme
alpha=dt*D/h^2; %equation parameter
nsteps=1000; %number of time steps
%%%%% CONSTRUCT THE MATRIX AND COMPUTE LU DECOMPOSITION %%%%%%%%%%%%%%%%%%%%
%%%%A=diag(ones(1,n*n).*2*(1+2*alpha))+diag(ones(1,n*n-1).*(-alpha),1)...
%    +diag(ones(1,n*n-1).*(-alpha),-1)+diag(ones(1,n*n-n).*(-alpha),n)...
%    +diag(ones(1,n*n-n).*(-alpha),-n);
e=ones(n*n);

A=spdiags([-alpha.*e],[-n, -1, 1, n],n*n,n*n)...
    +spdiags([2*(1+2*alpha).*e],0,n*n,n*n);

%%SET THE BOUNDARY POINTS
I=speye(n*n);
A(boundary_index,:)=I(boundary_index,:);
%%PERFORM LU DECOMPOSITION
[Lower,Upper]=lu(A);
[L1, U1]=lu(A);
%%%%% Define initial conditions %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
u=zeros(n,n,nsteps);
sigma=L/4;
u(:,:,1)=1/(2*pi*sigma^2)*exp(-0.5*(X.^2+Y.^2)/sigma^2); 
u(1,:,1)=0; u(n,:,1)=0; u(:,1,1)=0; u(:,n,1)=0; 
%%%%% ADVANCE SOLUTION u 
index_x=2:n-1;
index_y=index_x;

for m=2:nsteps

    u_prev=u(:,:,m-1);
    B=zeros(n,n);
    B(index_x,index_y)=[2*(1-2*alpha)*u_prev(index_x,index_y)+...
    alpha*(u_prev(index_x-1,index_y)+u_prev(index_x+1,index_y)+...
    u_prev(index_x,index_y+1)+u_prev(index_x,index_y-1))];
    B=reshape(B(:,:),[],1);
    %B(boundary_index)=0;
    SOLUCION=Upper\(Lower\B);
    SOLUCION= reshape(SOLUCION,[n,n]);
    u(:,:,m)=SOLUCION(:,:);
end
obj=VideoWriter('animation');
open(obj);
A=full(A);
% %%%%% Plot with animation:  UNCOMMENT TO RUN ON MATLAB ONLINE OR DESKTOP %%%
figure('units','normalized','outerposition',[0 0 1 1])
s=surf(X,Y,u(:,:,1)); zlim([0, 2.6]);
xlabel('$x$','Interpreter','latex','FontSize',14); 
ylabel('$y$','Interpreter','latex','FontSize',14); 
zlabel('$u(x,y,t)$','Interpreter','latex','FontSize',14); 
title('Solution of the 2D diffusion equation','Interpreter','latex','FontSize',16);
pause(1)
for j=2:nsteps
 s.ZData=u(:,:,j); pause(0.01);
 frame = getframe(gcf);
 
 writeVideo(obj,frame);
end
close(v)